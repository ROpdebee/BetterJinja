%YAML 1.2
%TAG ! tag:yaml-macros:YAMLMacros.lib.extend,YAMLMacros.lib.arguments,embed:
---
# Merge the content of this file into an existing YAML collection. In our case,
# this will be merged onto an empty file.
!merge

# !format => str.format the given string. Arguments are taken from the
# meta-variables (see the per-syntax macros). In essence, this formats the name
# of the syntax as "Jinja (HTML)" if the host language is HTML, Jinja (JSON)
# for JSON, etc. Scopes are analogous, and become "source.html.basic.jinja" etc
name: !format 'Jinja ({embedding_language})'
scope: !format '{embedding_scope}.jinja'
# Add the .jinja, .jinja2, .j2 suffixes to each file_extension listed in the
# host syntax' file extensions, through a custom macro.
file_extensions: !add_suffix
  # The source list of file extensions, retrieved from the meta-variables
  # through !argument.
  source: !argument embedding_suffixes
  # The list of suffixes to append.
  suffix:
    - jinja
    - jinja2
    - j2

# Main boilerplate embedding syntax. Will be instantiated with the appropriate
# values on a per-syntax basis.
contexts:
  main:
    - match: ""
      push: !argument embedding_syntax_path
      with_prototype:
        - match: (?=##|\{\{|\{%|\{#)
          push:
            - meta_scope: !format '{embedding_scope} source.jinja.embedded'
            - clear_scopes: true
            - include: Jinja.sublime-syntax#main
            - match: ''
              pop: true
